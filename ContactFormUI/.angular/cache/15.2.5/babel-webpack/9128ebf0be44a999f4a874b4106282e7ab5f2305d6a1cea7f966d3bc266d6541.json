{"ast":null,"code":"import { enviroment } from 'src/enviroments/enviroment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class HttpService {\n  constructor(http) {\n    this.http = http;\n    this.url = \"ContactForm\";\n  }\n  createContact(contact) {\n    return this.http.post(`${enviroment.apiUrl}${this.url}`, contact);\n  }\n}\nHttpService.ɵfac = function HttpService_Factory(t) {\n  return new (t || HttpService)(i0.ɵɵinject(i1.HttpClient));\n};\nHttpService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HttpService,\n  factory: HttpService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAIA,SAASA,UAAU,QAAQ,4BAA4B;;;AAOvD,OAAM,MAAOC,WAAW;EAGpBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,QAAG,GAAG,aAAa;EAEa;EAEjCC,aAAa,CAACC,OAAiB;IAClC,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CACjB,GAAGN,UAAU,CAACO,MAAM,GAAG,IAAI,CAACC,GAAG,EAAE,EAAEH,OAAO,CAC7C;EACL;;AATSJ,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAQ,SAAXR,WAAW;EAAAS,YAFR;AAAM","names":["enviroment","HttpService","constructor","http","createContact","contact","post","apiUrl","url","factory","providedIn"],"sourceRoot":"","sources":["D:\\AngularProjects\\ContactForm\\src\\app\\HttpService.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Contacts } from \"src/models/Contacts\";\r\nimport { enviroment } from 'src/enviroments/enviroment';\r\nimport { Messages } from \"src/models/Messages\";\r\nimport { ThemesMessages } from \"src/models/ThemesMessages\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class HttpService {\r\n    private url = \"ContactForm\"\r\n    \r\n    constructor(private http: HttpClient) { }\r\n    \r\n    public createContact(contact: Contacts) : Observable<Contacts[]>{\r\n        return this.http.post<Contacts[]>(\r\n            `${enviroment.apiUrl}${this.url}`, contact\r\n        );\r\n    }\r\n    // public createMessage(messages: Messages) : Observable<Messages[]>{\r\n    //     return this.http.post<Messages[]>(\r\n    //         `${enviroment.apiUrl}${this.url}`, messages\r\n    //     );\r\n    // }\r\n    // public createThemeMessage(themeMessage: ThemesMessages) : Observable<ThemesMessages[]>{\r\n    //     return this.http.post<ThemesMessages[]>(\r\n    //         `${enviroment.apiUrl}${this.url}`, themeMessage\r\n    //     );\r\n    // }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}